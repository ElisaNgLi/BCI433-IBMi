000100191204      //********************************************************************************
000101191203       //  BkCustomer READ BY NATIVE LANGUAGE (ILE RPG)
000102191203       //  Book ROW RETRIEVED WITH EMBEDDED SQL
000103191203       //  DETAIL REPORT LINE INCLUDES INFORMATION FROM BkCustomer and AudibleBks
000104191203       //  SUMMARRY REPORT INFORMATION RETRIEVED WITH EMBEDDED SQL STATEMENTS
000105191203       //********************************************************************************
000108191203       //Files
000109191204       DCL-F BKCUSTOMER DISK(*EXT) KEYED USAGE(*INPUT)
000110191203       RENAME(BKCUSTOMER:BKCUSTR);
000111191204       DCL-F BOOKRPT PRINTER OFLIND(*IN01);
000112191203
000113191203       //PASSED PARAMETER
000114191204       DCL-PI MAIN EXTPGM('BOOKSQL');
000115191203         REPRTTITLE CHAR(15);
000116191203       END-PI;
000117191203
000118191203
000119191203       //GET FIELDS FRM THE TABLE ACCESSED WITH EMBEDDED SQL
000120191203       DCL-DS AUDIBLEBKS EXT END-DS;
000121191203
000122191203       //V A R I A B L E S (FOR UNKNOWN VALUES AND DUMMY)
000123191203       DCL-S INDGENRE BINDEC(4:0);
000124191203       DCL-S DUMMY ZONED(1:0);
000125191203
000126191204
000127191204       //**********************************************************************
000128191204       //                     ***   M A I N   R O U T I N E   ***
000129191204       //**********************************************************************
000130191204
000131191203            EXSR SUMMARYINFO;
000132191203            //REPRTTITLE = REPRTTITLEIN;
000133191203            WRITE TITLE;
000134191203            WRITE COLHDG;
000135191203            READ  BKCUSTOMER;
000136191203            DOW NOT %EOF;
000137191203              EXSR SQLSELECT;
000138191203
000139191204       //EVAL(H) DISPRICE = PRICE * (1- DISCOUNT);
000140191204      // EVAL(H) EXPRICE = DISPRICE * QTY;
000141191203
000142191203              IF *IN01 = *ON;
000143191203                WRITE TITLE;
000144191203                WRITE COLHDG;
000145191203                *IN01 = *OFF;
000146191203              ENDIF;
000147191203              WRITE DETAIL;
000148191203              READ BKCUSTOMER;
000149191203            ENDDO;
000150191203           //RITE SUMMARY;
000151191204           WRITE BCI433;
000152191203            *INLR = *ON;
000153191203            RETURN;
000156191203      //**********************************************************************
000157191203      // S Q L S E L E C T   S U B R O U T I N E
000158191203      //**********************************************************************
000159191203      //A ROW FROM THE AUDIBLEBKS TABLE THAT HAS THE SAME BOOK NUMBER AS THE
000160191203      // ONE READ FROM THE BKCUSTOMER FILES IS RETRIEVED TO FIND OUT BOOK INFORMATION
000161191203      // ALLOW FOR NULL VALUES BEING STORED IN THE GENRE COLUMN
000162191203        BEGSR SQLSELECT;
000163191204       //   EXEC SQL
000164191204       //     SELECT BOOK, GENRE, PRICE
000165191204       //       INTO :BOOK, :GENRE, :INDGENRE, :PRICE //HAS NULL VALUE FOR :GENRE
000166191204       //     FROM BCI433LIB/AUDIBLEBKS
000167191204       //     WHERE  BOOKID = :BOOKPUR#;
000168191204       //   SELECT; //HOLDING RECOCORD-LEVEL ERRORS
000169191204       //     WHEN SQLSTATE = '00000';//SUCCESS
000170191204       //       DUMMY = 0;
000171191204       //       WHEN SQLSTATE = '02000';  // RECORD NOT FOUND FOR THE BOOKID
000172191204       //         BOOK='Not Found';
000173191204       //         PRICE = -999.99;
000174191204       //         GENRE = *ALL'*';
000175191204       //         //SOMEDATE = D'9999-09-09';
000176191204       //        WHEN %SUBST(SQLSTATE :1 :2) = '01';
000177191204       //     // BOOK = *ALL'*';
000178191204       //     BOOK = 'Warning';
000179191204       //        PRICE = -999.99;
000180191204       //        GENRE = *ALL'*';
000181191204       //      OTHER;
000182191204       //    //  BOOK = *ALL'*';
000183191204       //    BOOK = 'Error';
000184191204       //        PRICE = -999.99;
000185191204       //        GENRE = *ALL'*';
000186191204       //  ENDSL;
000187191204       //
000188191204       //  IF INDGENRE = -1; // HANDLING FIELD-LEVEL ERRORS, E.G NULL VALUE, DATA FIELD
000189191204       //    GENRE = 'UNKNOWN GENRE';
000190191204       //  ELSE;             // OTHER ERROR, E.G WRONG DATA FORMAT
000191191204       //    IF INDGENRE <> 0;
000192191204       //      GENRE = 'GENRE TEXT PROBLEM';
000193191204       //    ENDIF;
000194191204       //  ENDIF;
000195191204       //      SELECT;
000196191204       //      WHEN DISCOUNT <> 0;
000197191204       //        EVAL(H) DISPRICE = PRICE - (PRICE * DISCOUNT);
000198191204       //       OTHER;
000199191204       //          DISPRICE = PRICE;
000200191204       //    ENDSL;
000201191204       //
000202191204       //    EXPRICE = DISPRICE * QTY;
000203191204         EXEC SQL
000204191204         SELECT BOOK, GENRE, PRICE
000205191204
000206191204           INTO :BOOK, :GENRE :INDGENRE, :PRICE
000207191204           FROM BCI433LIB/AUDIBLEBKS
000208191204           WHERE BOOKID = :BOOKPUR#;
000209191204
000210191204           SELECT;
000211191204             WHEN SQLSTATE = '00000';
000212191204               DUMMY = 0;
000213191204             WHEN SQLSTATE = '02000';
000214191204               BOOK  = 'NOT FOUND';
000215191204             WHEN %SUBST(SQLSTATE :1 :2) = '01';
000216191204               BOOK = 'WARNING';
000217191204             OTHER;
000218191204               BOOK = 'ERROR';
000219191204           ENDSL;
000220191204
000221191204           IF INDGENRE = -1;
000222191204             GENRE = 'UNKNOWN GENRE';
000223191204           ENDIF;
000224191204
000225191204           SELECT;
000226191204             WHEN DISCOUNT <> 0;
000227191204               EVAL(H) DISPRICE = PRICE - (PRICE * DISCOUNT);
000228191204              OTHER;
000229191204                 DISPRICE = PRICE;
000230191204           ENDSL;
000231191204
000232191204           EXPRICE = DISPRICE * QTY;
000233191204
000234191204
000235191203        ENDSR;
000236191203
000237191203       //**********************************************************************
000238191203        // S U M M A R Y I N F O    S U B R O U T I N E
000239191203        //**********************************************************************
000240191203
000241191203          BEGSR SUMMARYINFO;
000242191203            // D E T E R M I N E  T O T A L S  F O R   BKCUSTOMER
000243191203               EXEC SQL
000244191203                 SELECT SUM(QTY)
000245191203                   INTO :TOTQTY
000246191203                   FROM BCI433LIB/BKCUSTOMER AS A, BCI433LIB/AUDIBLEBKS AS B
000247191203                   WHERE A.BOOKPUR# = B.BOOKID;
000248191203
000249191204               IF SQLCODE <> 0 OR SQLWN0= 'N';
000250191203                 TOTQTY = -999;
000251191203               ENDIF;
000252191203
000253191203            // D E T E R M I N E   HIGHEST QUANTITY CUSTOMER PURCHASE
000254191203                  EXEC SQL
000255191203                    SELECT MAX(QTY)
000256191203                      INTO :MOSTBOOKS
000257191203                      FROM BCI433LIB/BKCUSTOMER;
000258191203
000259191203                      IF SQLCODE <> 0 OR SQLWN0 = 'W';
000260191203                      MOSTBOOKS = -999;
000261191203                      ENDIF;
000262191203
000263191203            // D E T E R M I N E   TOTAL QUANTITY BOOKS PURCHASED FOR ALL CUSTOMERS
000264191203                      EXEC SQL
000265191203                        SELECT COUNT(*)
000266191203                          INTO :BKCUSTTOT
000267191203                          FROM BCI433LIB/BKCUSTOMER;
000268191203
000269191203                      IF SQLCODE <> 0 OR SQLWN0 = 'W';
000270191203                        BKCUSTTOT = -999;
000271191203                      ENDIF;
000272191203
000273191203            // D E T E R M I N E   T H E   U S E R   S E R V E R   &   T I M E S T A M P
000274191203                        EXEC SQL
000275191203                          SELECT CURRENT SERVER, CURRENT DATE
000276191203                            INTO :SYSTEMNAME, :REPORTDATE
000277191203                            FROM SYSIBM/SYSDUMMY1;
000278191203          ENDSR;
000279191203
